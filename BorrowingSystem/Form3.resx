<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFIAAABPCAYAAAB4ZJLeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA6xJREFUeF7tmr9u1EAYxPMIvAF0tCl4gIg+4kqaiEh0QeIoAw0UpE6klBSkoiSi
        P5QSUkWCIhXQ0FBFoPTm5nSLjDVe7+y357PhG+mnSHPx7nrW+8d7t7Fxe7tyCkBNR4eajg41HR1qOjrU
        dHSo6ehQ09GhpqNDTUeHmo4ONR0dajo61BwAD/aPFrDPBgk11wwCDBpNmNRcI/UQg0YRJjXXBAsxaPBh
        UnMNxEIMGnSY1OyZlBCDBhsmNXtECTFokGFSsydyQgwaXJjU7AFLiEGDCpOaPXBx+WUZR75O3s5o2WuB
        mj1w4859U5iDChFQsydywxxciICaPaKGOcgQATUTQABPDl5Vp7OP1bfvPxZcXH6tXs9vdLJ3QK9pIzXM
        nBC3dp7N2/T+TxvB2fnnane+UN26+5BekwU1O0Dj0KCY8LnS0K4w1RBRNwKLCW2c7L2k18tQM4KybSkV
        Zk6IXR1dV5FtFDVbQANVIRhWVhvNMHOGsxJi0ObkMS0rGWq20DVU2oT5iJXXRggzJ0TUlaOz80+0vGSo
        Sch5GoNyGokwmd9FbmdDuXUuoCYBK3Gurn5e0zJXgUWTR4aFh5qE3f3DZXV5uiksOrngibJInYL+gpoE
        a5CmYZPIKILc2nm6rE5Xn0P76tf1slZd2B+zMpOgJgG9ndtIvO2wMlcBVvocYcvEykuGmi28OH6zrFaT
        sim3kjtyjk7e0fKSoWYLeCrVzS7CZ2WtErXDcU/mOZyaEZTXr5wNdSnwhKUI91JkxFCzA/RebC7CXIqT
        IXZtn2CnEet0zN3mJzFAzUTQk2gshhKOqvAXK1+xxhUCLxOhjXhSsc0p3kZqOjrUdHSo2QGGb/1kPAZO
        zfG/ps1uIqijeRreRmiX6W2mDjUjYILO1aF1rxbhubjlqet09qHf7Q+CsAo3zMq2YAkxyNzJ1CRYziOb
        KvkLCcvxXlOmp5KahJINhkqEiTnRckjR1CiO0Zgsw3w63/CX1miDhLCCKjeApzD2ta1Fow4yCIGGHxds
        TqaLOTkAD4tByWHM9E8EOQSNKshVPFWlyhxVkHjzQFkYylYhQPzkJPdUvKnRBVkvMydQBIjTnLDv+++D
        DGzemy6CwZf7bJjCw2fhmK55vQcZIazY7LMmHmQhRhUkvp1DCFZMjW0BnczqUsE9svKToKajQ01Hh5qO
        DjUdHWo6OtR0dKjp6FDT0aGmo0NNR4eajg41HR1qOjrUdHSo6ehQ09GhpqNDTUeHmo7IdvUbUNiXnAqt
        o9EAAAAASUVORK5CYII=
</value>
  </data>
</root>