<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +gAAAABJRU5ErkJggg==
</value>
  </data>
</root>